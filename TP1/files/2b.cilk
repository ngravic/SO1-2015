#include <cilk-lib.cilkh>
#include <stdio.h>

#define N_FILOSOFOS 5
#define ESPERA 50000

Cilk_lockvar tenedor[N_FILOSOFOS];

void pensar(int i)
{
	printf("Filosofo %d pensando...\n",i);
	usleep(random() % ESPERA);
}
void comer(int i)
{
	printf("Filosofo %d comiendo...\n",i);
	usleep(random() % ESPERA);
}
void tomar_tenedores(int i)
{
	if(i == 2) //Si i = 2 => i es zurdo
	{
		Cilk_lock(tenedor[(i + 1) % N_FILOSOFOS]); /* Toma el tenedor a su izquierda */
		Cilk_lock(tenedor[i]); /* Toma el tenedor a su derecha */	
	}
	else
	{
		Cilk_lock(tenedor[i]); /* Toma el tenedor a su derecha */
		Cilk_lock(tenedor[(i + 1) % N_FILOSOFOS]); /* Toma el tenedor a su izquierda */
	}	
}

void dejar_tenedores(int i)
{
	if(i == 2) //Si i = 2 => i es zurdo
	{
		Cilk_unlock(tenedor[(i + 1) % N_FILOSOFOS]); /* Toma el tenedor a su izquierda */
		Cilk_unlock(tenedor[i]); /* Toma el tenedor a su derecha */	
	}
	else
	{
		Cilk_unlock(tenedor[i]); /* Toma el tenedor a su derecha */
		Cilk_unlock(tenedor[(i + 1) % N_FILOSOFOS]); /* Toma el tenedor a su izquierda */
	}	
}

cilk void filosofo(int i)
{
	for (;;) {
		tomar_tenedores(i);
		comer(i);
		dejar_tenedores(i);
		pensar(i);				
	}
}

cilk int main ()
{	
	int i;	
	for (i = 0; i < N_FILOSOFOS; i++)
		Cilk_lock_init(tenedor[i]);
	for (i = 0; i < N_FILOSOFOS; i++)
		spawn filosofo(i);
	sync;
	return 0;
}